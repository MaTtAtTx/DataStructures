<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>600</x>
      <y>360</y>
      <w>480</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>bg=cyan
LinearNode&lt;Type&gt;
--

- LinearNode&lt;Type&gt; * : next

--
+ LinearNode() : constructor
+ LinearNode(Type data) : constructor
+ LinearNode(Type data, LinearNode&lt;Type&gt; * next) : constructor

+ setNextNode(LinearNode&lt;Type&gt; *) : void
+ getNextNode() : LinearNode&lt;Type&gt; *</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>800</x>
      <y>540</y>
      <w>70</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>650</x>
      <y>630</y>
      <w>330</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>bg=green
Node&lt;Type&gt;
--

#data : Type

--
+ Node() : constructor
+ Node(Type data) : constructor
+ getData() : Type
+ setData(Type data) : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>100</x>
      <y>330</y>
      <w>350</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>bg=#007EFF
/List&lt;Type&gt;/
--

# size : int

--
/+ add(Type item) : void/
/+ addAtIndex(int index, Type item) : void/
/+ remove(Type item) : Type/
/+ getFromIndex(int index) : Type/

/+ getSize() const : int/
/+ getFront() : LinearNode&lt;Type&gt; */
/+ getEnd() : LinearNode&lt;Type&gt; */</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>450</y>
      <w>180</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-

m2=0</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>620</y>
      <w>410</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>bg=#00BFFF
LinkedList&lt;Type&gt;
--

- LinearNode&lt;Type&gt; * : front
- LinearNode&lt;Type&gt; * : end

--
+ LinkedList() : constructor
+ ~LinkedList() : virtual

+ getSize() const : int
+ getFront() : LinearNode&lt;Type&gt; *
+ getEnd() : LinearNode&lt;Type&gt; *

+ add(Type item) : void
+ addAtIndex(int index, Type item) : void
+ getFromIndex(int index) : Type
+ remove(int index) : Type
+ setAtIndex(int index, Type item) : Type
+ contains(Type item) : bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>260</x>
      <y>540</y>
      <w>70</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>520</y>
      <w>140</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-

m2=0-n</panel_attributes>
    <additional_attributes>10.0;230.0;70.0;230.0;70.0;10.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>630</x>
      <y>1100</y>
      <w>450</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>bg=#357DC0
Queue
--

--
+ Queue() : constructor
+ ~Queue() : destructor

+ enqueue(Type data) : void
+ dequeue() : Type
+ peek() : Type
+ clear() : void

+ add(Type data) : void
+ addAtIndex(int index, Type data) : void
+ getFromIndex(int index) : Type
+ remove(int index) : Type</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1050</x>
      <y>580</y>
      <w>700</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>bg=#00BFAA
transparency=1
DoubleNode&lt;Type&gt;
--

# DoubleNode&lt;Type&gt; * : next
# DoubleNode&lt;Type&gt; * : previous

--
+ DoubleNode() : constructor
+ DoubleNode(Type data) : constructor
+ DoubleNode(Type data, DoubleNode&lt;Type&gt; * previous, DoubleNode&lt;Type&gt; * next) : constructor

+ getPrevious() : DoubleNode&lt;Type&gt; *
+ getNext() : DoubleNode&lt;Type&gt; *

+ setPrevious(DoubleNode&lt;Type&gt; *) : void
+ setNext(DoubleNode&lt;Type *) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>970</x>
      <y>680</y>
      <w>100</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;20.0;80.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>630</x>
      <y>0</y>
      <w>410</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>bg=#00BFFF
CircularList&lt;Type&gt;
--

- DoubleNode&lt;Type&gt; * : front
- DoubleNode&lt;Type&gt; * : end

--
+ CircularList() : constructor
+ ~CircularList() : destructor

- findNode(int index) : DoubleNode&lt;Type&gt; *

+ add(Type item) : void
+ addAtIndex(int index, Type item) : void
+ remove(int index) : Type
+ getFromIndex(int index) : Type
+ getSize() const : int
+ getFront() : LinearNode&lt;Type&gt; *
+ getEnd() : LinearNode&lt;Type&gt; *
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>310</x>
      <y>90</y>
      <w>340</w>
      <h>260</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;240.0;10.0;10.0;320.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1030</x>
      <y>80</y>
      <w>480</w>
      <h>520</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-

m2=0-n</panel_attributes>
    <additional_attributes>10.0;20.0;440.0;20.0;440.0;500.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>1130</y>
      <w>450</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>bg=#357DC0
Stack
--

--
+ Stack() : constructor
+ ~Stack() : destructor

+ push(Type data) : void
+ pop() : Type
+ peek() : Type

+ add(Type data) : void
+ addAtIndex(int index, Type data) : void
+ getFromIndex(int index) : Type
+ remove(int index) : Type</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>870</y>
      <w>400</w>
      <h>250</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;20.0;380.0;20.0;380.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>230</x>
      <y>930</y>
      <w>70</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;200.0</additional_attributes>
  </element>
</diagram>
