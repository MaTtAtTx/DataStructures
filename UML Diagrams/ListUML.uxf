<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>576</x>
      <y>300</y>
      <w>288</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>bg=cyan
LinearNode&lt;Type&gt;
--

- LinearNode&lt;Type&gt; * : next

--
+ LinearNode() : constructor
+ LinearNode(Type data) : constructor
+ LinearNode(Type data, LinearNode&lt;Type&gt; * next) : constructor

+ setNextNode(LinearNode&lt;Type&gt; *) : void
+ getNextNode() : LinearNode&lt;Type&gt; *</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>696</x>
      <y>408</y>
      <w>42</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>606</x>
      <y>462</y>
      <w>198</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>bg=green
Node&lt;Type&gt;
--

#data : Type

--
+ Node() : constructor
+ Node(Type data) : constructor
+ getData() : Type
+ setData(Type data) : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>276</x>
      <y>282</y>
      <w>210</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>bg=#007EFF
/List&lt;Type&gt;/
--

# size : int

--
/+ add(Type item) : void/
/+ addAtIndex(int index, Type item) : void/
/+ remove(Type item) : Type/
/+ getFromIndex(int index) : Type/

/+ getSize() const : int/
/+ getFront() : LinearNode&lt;Type&gt; */
/+ getEnd() : LinearNode&lt;Type&gt; */</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>480</x>
      <y>354</y>
      <w>108</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-

m2=0</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>264</x>
      <y>456</y>
      <w>246</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>bg=#00BFFF
LinkedList&lt;Type&gt;
--

- LinearNode&lt;Type&gt; * : front
- LinearNode&lt;Type&gt; * : end

--
+ LinkedList() : constructor
+ ~LinkedList() : virtual

+ getSize() const : int
+ getFront() : LinearNode&lt;Type&gt; *
+ getEnd() : LinearNode&lt;Type&gt; *

+ add(Type item) : void
+ addAtIndex(int index, Type item) : void
+ getFromIndex(int index) : Type
+ remove(int index) : Type
+ setAtIndex(int index, Type item) : Type
+ contains(Type item) : bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>372</x>
      <y>408</y>
      <w>42</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>396</y>
      <w>84</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-

m2=0-n</panel_attributes>
    <additional_attributes>10.0;230.0;70.0;230.0;70.0;10.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>594</x>
      <y>744</y>
      <w>270</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>bg=#357DC0
Queue
--

--
+ Queue() : constructor
+ ~Queue() : destructor

+ enqueue(Type data) : void
+ dequeue() : Type
+ peek() : Type
+ clear() : void

+ add(Type data) : void
+ addAtIndex(int index, Type data) : void
+ getFromIndex(int index) : Type
+ remove(int index) : Type</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>846</x>
      <y>432</y>
      <w>420</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>bg=#00BFAA
transparency=1
DoubleNode&lt;Type&gt;
--

# DoubleNode&lt;Type&gt; * : next
# DoubleNode&lt;Type&gt; * : previous

--
+ DoubleNode() : constructor
+ DoubleNode(Type data) : constructor
+ DoubleNode(Type data, DoubleNode&lt;Type&gt; * previous, DoubleNode&lt;Type&gt; * next) : constructor

+ getPrevious() : DoubleNode&lt;Type&gt; *
+ getNext() : DoubleNode&lt;Type&gt; *

+ setPrevious(DoubleNode&lt;Type&gt; *) : void
+ setNext(DoubleNode&lt;Type *) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>798</x>
      <y>492</y>
      <w>60</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;20.0;80.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>594</x>
      <y>84</y>
      <w>246</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>bg=#00BFFF
CircularList&lt;Type&gt;
--

- DoubleNode&lt;Type&gt; * : front
- DoubleNode&lt;Type&gt; * : end

--
+ CircularList() : constructor
+ ~CircularList() : destructor

- findNode(int index) : DoubleNode&lt;Type&gt; *

+ add(Type item) : void
+ addAtIndex(int index, Type item) : void
+ remove(int index) : Type
+ getFromIndex(int index) : Type
+ getSize() const : int
+ getFront() : LinearNode&lt;Type&gt; *
+ getEnd() : LinearNode&lt;Type&gt; *
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>402</x>
      <y>138</y>
      <w>204</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;240.0;10.0;10.0;320.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>834</x>
      <y>132</y>
      <w>288</w>
      <h>312</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-

m2=0-n</panel_attributes>
    <additional_attributes>10.0;20.0;440.0;20.0;440.0;500.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>216</x>
      <y>762</y>
      <w>270</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>bg=#357DC0
Stack
--

--
+ Stack() : constructor
+ ~Stack() : destructor

+ push(Type data) : void
+ pop() : Type
+ peek() : Type

+ add(Type data) : void
+ addAtIndex(int index, Type data) : void
+ getFromIndex(int index) : Type
+ remove(int index) : Type</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>606</y>
      <w>240</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;20.0;380.0;20.0;380.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>354</x>
      <y>642</y>
      <w>42</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;200.0</additional_attributes>
  </element>
</diagram>
