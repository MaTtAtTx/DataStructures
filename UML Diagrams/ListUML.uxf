<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>469</x>
      <y>385</y>
      <w>336</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>bg=cyan
LinearNode&lt;Type&gt;
--

- LinearNode&lt;Type&gt; * : next

--
+ LinearNode() : constructor
+ LinearNode(Type data) : constructor
+ LinearNode(Type data, LinearNode&lt;Type&gt; * next) : constructor

+ setNextNode(LinearNode&lt;Type&gt; *) : void
+ getNextNode() : LinearNode&lt;Type&gt; *</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>609</x>
      <y>511</y>
      <w>49</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>504</x>
      <y>574</y>
      <w>231</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>bg=green
Node&lt;Type&gt;
--

#data : Type

--
+ Node() : constructor
+ Node(Type data) : constructor
+ getData() : Type
+ setData(Type data) : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>119</x>
      <y>364</y>
      <w>245</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>bg=#007EFF
/List&lt;Type&gt;/
--

# size : int

--
/+ add(Type item) : void/
/+ addAtIndex(int index, Type item) : void/
/+ remove(Type item) : Type/
/+ getFromIndex(int index) : Type/

/+ getSize() const : int/
/+ getFront() : LinearNode&lt;Type&gt; */
/+ getEnd() : LinearNode&lt;Type&gt; */</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>357</x>
      <y>448</y>
      <w>126</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-

m2=0</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>105</x>
      <y>567</y>
      <w>287</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>bg=#00BFFF
LinkedList&lt;Type&gt;
--

- LinearNode&lt;Type&gt; * : front
- LinearNode&lt;Type&gt; * : end

--
+ LinkedList() : constructor
+ ~LinkedList() : virtual

+ getSize() const : int
+ getFront() : LinearNode&lt;Type&gt; *
+ getEnd() : LinearNode&lt;Type&gt; *

+ add(Type item) : void
+ addAtIndex(int index, Type item) : void
+ getFromIndex(int index) : Type
+ remove(int index) : Type
+ setAtIndex(int index, Type item) : Type
+ contains(Type item) : bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>231</x>
      <y>511</y>
      <w>49</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>385</x>
      <y>497</y>
      <w>98</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-

m2=</panel_attributes>
    <additional_attributes>10.0;230.0;70.0;230.0;70.0;10.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>434</x>
      <y>833</y>
      <w>161</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>Stack
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>651</x>
      <y>833</y>
      <w>161</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>Queue
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>784</x>
      <y>539</y>
      <w>490</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>bg=#00BFAA
transparency=1
DoubleNode&lt;Type&gt;
--

# DoubleNode&lt;Type&gt; * : next
# DoubleNode&lt;Type&gt; * : previous

--
+ DoubleNode() : constructor
+ DoubleNode(Type data) : constructor
+ DoubleNode(Type data, DoubleNode&lt;Type&gt; * previous, DoubleNode&lt;Type&gt; * next) : constructor

+ getPrevious() : DoubleNode&lt;Type&gt; *
+ getNext() : DoubleNode&lt;Type&gt; *

+ setPrevious(DoubleNode&lt;Type&gt; *) : void
+ setNext(DoubleNode&lt;Type *) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>728</x>
      <y>609</y>
      <w>70</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;20.0;80.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>511</x>
      <y>140</y>
      <w>287</w>
      <h>196</h>
    </coordinates>
    <panel_attributes>bg=#00BFFF
CircularList&lt;Type&gt;
--

- DoubleNode&lt;Type&gt; * : front
- DoubleNode&lt;Type&gt; * : end

--
+ CircularList() : constructor
+ ~CircularList() : destructor

- 

+ add(Type item) : void
+ addAtIndex(int index, Type item) : void
+ remove(int index) : Type
+ getFromIndex(int index) : Type
+ getSize() const : int
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>266</x>
      <y>210</y>
      <w>259</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;220.0;10.0;10.0;350.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>791</x>
      <y>196</y>
      <w>308</w>
      <h>357</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-

m2=</panel_attributes>
    <additional_attributes>10.0;20.0;420.0;20.0;420.0;490.0</additional_attributes>
  </element>
</diagram>
