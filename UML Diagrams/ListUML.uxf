<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>496</x>
      <y>128</y>
      <w>384</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>bg=cyan
LinearNode&lt;Type&gt;
--

- LinearNode&lt;Type&gt; * : next

--
+ LinearNode() : constructor
+ LinearNode(Type data) : constructor
+ LinearNode(Type data, LinearNode&lt;Type&gt; * next) : constructor

+ setNextNode(LinearNode&lt;Type&gt; *) : void
+ getNextNode() : LinearNode&lt;Type&gt; *</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>656</x>
      <y>280</y>
      <w>56</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>536</x>
      <y>336</y>
      <w>264</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>bg=green
Node&lt;Type&gt;
--

#data : Type

--
+ Node() : constructor
+ Node(Type data) : constructor
+ getData() : Type
+ setData(Type data) : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>120</x>
      <y>104</y>
      <w>280</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>bg=#00bfff
/List&lt;Type&gt;/
--

# size : int

--
/+ add(Type item) : void/
/+ addAtIndex(int index, Type item) : void/
/+ remove(Type item) : Type/
/+ getFromIndex(int index) : Type/

/+ getSize() const : int/
/+ getFront() : LinearNode&lt;Type&gt; */
/+ getEnd() : LinearNode&lt;Type&gt; */</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>392</x>
      <y>200</y>
      <w>120</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-

m2=0</panel_attributes>
    <additional_attributes>10.0;20.0;130.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>104</x>
      <y>320</y>
      <w>328</w>
      <h>256</h>
    </coordinates>
    <panel_attributes>bg=cyan
LinkedList&lt;Type&gt;
--

- LinearNode&lt;Type&gt; * : front
- LinearNode&lt;Type&gt; * : end

--
+ LinkedList() : constructor
+ ~LinkedList() : virtual

+ getSize() const : int
+ getFront() : LinearNode&lt;Type&gt; *
+ getEnd() : LinearNode&lt;Type&gt; *

+ add(Type item) : void
+ addAtIndex(int index, Type item) : void
+ getFromIndex(int index) : Type
+ remove(int index) : Type
+ setAtIndex(int index, Type item) : Type
+ contains(Type item) : bool
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>248</x>
      <y>272</y>
      <w>24</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>424</x>
      <y>256</y>
      <w>88</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-

m2=0-n</panel_attributes>
    <additional_attributes>10.0;210.0;40.0;210.0;40.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>520</x>
      <y>528</y>
      <w>184</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Stack
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>728</x>
      <y>528</y>
      <w>184</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Queue
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>904</x>
      <y>296</y>
      <w>408</w>
      <h>208</h>
    </coordinates>
    <panel_attributes>bg=#00BFAA
transparency=0
DoubleNode&lt;Type&gt;
--

# DoubleNode&lt;Type&gt; * : next
# DoubleNode&lt;Type&gt; * : previous

--
+ DoubleNode() : constructor
+ DoubleNode(Type data) : constructor
+ DoubleNode(Type data, DoubleNode&lt;Type&gt; * previous) : constructor

+ setNextNode(LinearNode&lt;Type&gt; *) : void
+ getNextNode() : LinearNode&lt;Type&gt; *</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>792</x>
      <y>376</y>
      <w>128</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
public</panel_attributes>
    <additional_attributes>10.0;20.0;140.0;20.0</additional_attributes>
  </element>
</diagram>
